import requests


class cve:

    url = ''

    params = dict()

    def __init__(self, url, params):
        cve.url = url
        cve.params = params

    def switch(case):
        if "cvssMetricV31" in case:
            return "V31"
        elif "cvssMetricV30" in case:
            return "V30"
        elif "cvssMetricV2" in case:
            return "V2"

    def parser(self, data):
        result = dict()
        counter = 0
        while (counter < len(data['vulnerabilities'])):
            severity = ''
            score = 0
            message = ""
            reference = ""
            cve_number = data['vulnerabilities'][counter]['cve']['id']
            des = data['vulnerabilities'][counter]['cve']['descriptions'][0]['value']
            version = cve.switch(
                data['vulnerabilities'][counter]['cve']['metrics'])
            if (version == 'V31'):
                severity = data['vulnerabilities'][counter]['cve']['metrics']['cvssMetricV31'][0]['cvssData']['baseSeverity']

                score = data['vulnerabilities'][counter]['cve']['metrics']['cvssMetricV31'][0]['cvssData']['baseScore']

            if (version == 'V30'):
                severity = data['vulnerabilities'][counter]['cve']['metrics']['cvssMetricV30'][0]['cvssData']['baseSeverity']

                score = data['vulnerabilities'][counter]['cve']['metrics']['cvssMetricV30'][0]['cvssData']['baseScore']

            if (version == 'V2'):
                score = data['vulnerabilities'][counter]['cve']['metrics']['cvssMetricV2'][0]['cvssData']['baseScore']

                severity = data['vulnerabilities'][counter]['cve']['metrics']['cvssMetricV2'][0]['baseSeverity']

            if (len(data['vulnerabilities'][counter]['cve']['references']) != 0):
                reference = data['vulnerabilities'][counter]['cve']['references'][0]['url']

            if (severity == "HIGH" or severity == "CRITICAL"):

                message = "CVE: " + cve_number+"\n"+"CVSS-SCORE: "+str(score)+"\n" + \
                    "CVSS-SEVERITY: "+severity+"\n"+"DESCRIPTION:  "+des+"\n"+reference+"\n \n \n \n"

            result[counter] = message
            counter = counter+1

        return result

    def get(self):
        resp = requests.get(cve.url, cve.params)
        data = resp.json()  # Check the JSON Response Content documentation below
        result = cve.parser(self, data)
        return result
